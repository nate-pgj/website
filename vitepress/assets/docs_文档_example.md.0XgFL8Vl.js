import{_ as a,c as s,o as n,U as e}from"./chunks/framework.TOizDqvi.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/文档/example.md","filePath":"docs/文档/example.md","lastUpdated":1705032948000}'),t={name:"docs/文档/example.md"},p=e(`<h2 id="_0-六进制转换为rgba" tabindex="-1">0:六进制转换为rgba <a class="header-anchor" href="#_0-六进制转换为rgba" aria-label="Permalink to &quot;0:六进制转换为rgba&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>function hexToRgba(hex) {</span></span>
<span class="line"><span>   const [r, g, b] = hex.match(/\\w\\w/g).map(val =&gt; parseInt(val, 16))</span></span>
<span class="line"><span>   return \`rgba(\${r}, \${g}, \${b}, 1)\`;</span></span>
<span class="line"><span>}</span></span></code></pre></div><h2 id="_1-rgba转换为十六进制" tabindex="-1">1:rgba转换为十六进制 <a class="header-anchor" href="#_1-rgba转换为十六进制" aria-label="Permalink to &quot;1:rgba转换为十六进制&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>function rgbaToHex(r, g, b) {</span></span>
<span class="line"><span>   return &quot;#&quot; + [r, g, b].map(num =&gt; parseInt(num).toString(16).padStart(2, &#39;0&#39;)).join(&#39;&#39;)</span></span>
<span class="line"><span>}</span></span></code></pre></div><h2 id="_2-除数组中的重复元素" tabindex="-1">2:除数组中的重复元素 <a class="header-anchor" href="#_2-除数组中的重复元素" aria-label="Permalink to &quot;2:除数组中的重复元素&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>function uniqueArray(arr) {</span></span>
<span class="line"><span>   return [...new Set(arr)]</span></span>
<span class="line"><span>}</span></span></code></pre></div><h2 id="_3-六进制转换为rgba2" tabindex="-1">3:六进制转换为rgba2 <a class="header-anchor" href="#_3-六进制转换为rgba2" aria-label="Permalink to &quot;3:六进制转换为rgba2&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>function hexToRgba(hex) {</span></span>
<span class="line"><span>   const [r, g, b] = hex.match(/\\w\\w/g).map(val =&gt; parseInt(val, 16))</span></span>
<span class="line"><span>   return \`rgba(\${r}, \${g}, \${b}, 1)\`;</span></span>
<span class="line"><span>}</span></span></code></pre></div><h2 id="_4-rgba转换为十六进制2" tabindex="-1">4:rgba转换为十六进制2 <a class="header-anchor" href="#_4-rgba转换为十六进制2" aria-label="Permalink to &quot;4:rgba转换为十六进制2&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>function rgbaToHex(r, g, b) {</span></span>
<span class="line"><span>   return &quot;#&quot; + [r, g, b].map(num =&gt; parseInt(num).toString(16).padStart(2, &#39;0&#39;)).join(&#39;&#39;)</span></span>
<span class="line"><span>}</span></span></code></pre></div><h2 id="_5-除数组中的重复元素34567890123" tabindex="-1">5:除数组中的重复元素34567890123 <a class="header-anchor" href="#_5-除数组中的重复元素34567890123" aria-label="Permalink to &quot;5:除数组中的重复元素34567890123&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>function uniqueArray(arr) {</span></span>
<span class="line"><span>   return [...new Set(arr)]</span></span>
<span class="line"><span>}</span></span></code></pre></div>`,12),i=[p];function l(r,o,c,d,h,g){return n(),s("div",null,i)}const m=a(t,[["render",l]]);export{b as __pageData,m as default};
